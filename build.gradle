plugins {
    id 'java'
    id 'java-library'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id("xyz.jpenilla.run-paper") version "2.3.1"
}

group = 'top.molab.minecraft'
version = '1.0.3-Beta'

repositories {
    maven { url 'https://repo.carm.cc/repository/maven-public/' }
    mavenCentral()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven { url 'https://raw.githubusercontent.com/CarmJos/EasyPlugin/repo/' }
    maven {
        name = "helpchatRepoReleases"
        url = uri("https://repo.extendedclip.com/releases")
    }
    maven { url "https://repo.helpch.at/releases" }


}
shadowJar {
    // 包含所有运行时依赖
    configurations = [project.configurations.runtimeClasspath]
}

dependencies {
    compileOnly "org.spigotmc:spigot-api:1.20.1-R0.1-SNAPSHOT"
    compileOnly "me.clip:placeholderapi:2.11.6"

    implementation "cc.carm.lib:easyplugin-utils:1.5.12"

    implementation 'org.apache.commons:commons-text:1.10.0'

    api "cc.carm.lib:easysql-hikaricp:0.4.7"


}

tasks {
    runServer {
        // Configure the Minecraft version for our task.
        // This is the only required configuration besides applying the plugin.
        // Your plugin's jar (or shadowJar if present) will be used automatically.
        minecraftVersion("1.20.1")
    }
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
